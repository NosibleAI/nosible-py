name: CI & Publish

on:
  push:
  pull_request:

jobs:
  record:
    name: Record HTTP interactions
    runs-on: ubuntu-latest
    env:
      NOSIBLE_API_KEY: ${{ secrets.NOSIBLE_API_KEY }}
      LLM_API_KEY:     ${{ secrets.LLM_API_KEY }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python & UV tool
        uses: astral-sh/setup-uv@v6
        with:
          python-version: 3.12
          enable-cache: true

      - name: Create virtual environment
        run: uv venv

      - name: Install project dependencies
        run: uv pip install -e .

      - name: Install test dependencies
        run: uv pip install pytest pytest-doctestplus requests-cache pytest-xdist

      - name: Debug ls
        run: |
          pwd
          ls

      - name: Run tests in record mode
        run: |
          uv run pytest --maxfail=1 -n auto

      - name: Save cache of HTTP results (per-run)
        if: always()
        uses: actions/cache@v4
        id: cache
        with:
          path: http_tests_cache
          key: nosible-http-cache-${{ github.run_id }}-${{ github.run_attempt }}
          enableCrossOsArchive: true


  test:
    name: Test on ${{ matrix.os }} / Python ${{ matrix.python-version }}
    needs: record
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.9", "3.12"]
    env:
      NOSIBLE_API_KEY: ${{ secrets.NOSIBLE_API_KEY }}
      LLM_API_KEY:     ${{ secrets.LLM_API_KEY }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Restore HTTP cache (per-run)
        uses: actions/cache/restore@v4
        id: cache
        with:
          path: http_tests_cache
          key: nosible-http-cache-${{ github.run_id }}-${{ github.run_attempt }}
          enableCrossOsArchive: true

      - name: Fail on cache miss
        if: steps.cache.outputs.cache-hit != 'true'
        run: exit 1

      - name: Setup Python & UV tool
        uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ matrix.python-version }}
          enable-cache: true

      - name: Create virtual environment
        run: uv venv

      - name: Install project dependencies
        run: uv pip install -r docs/requirements.txt

      - name: Install test dependencies
        run: |
          uv pip install pytest pytest-doctestplus requests-cache

      - name: Debug ls
        run: |
          pwd
          ls

      - name: Run tests
        run: uv run pytest --maxfail=1 --cache-only # Enforcing cache only here

  build:
    name: Build package distribution
    needs: test
    runs-on: ubuntu-latest
    if: ${{ needs.test.result == 'success' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Setup UV tool
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true

      - name: Build distributions
        run: uv build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

  publish:
    name: Publish package to PyPI
    needs: build
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' && needs.build.result == 'success' }}
    environment:
      name: pypi
      url: https://pypi.org/project/nosible
    permissions:
      id-token: write
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          pypi_token: ${{ secrets.PYPI_API_TOKEN }}
